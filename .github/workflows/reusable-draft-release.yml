name: Reusable Draft Release
on:
  workflow_call:
    inputs:
      draft:
        description: 'Whether to create a draft release'
        required: false
        default: true
        type: boolean
      prerelease:
        description: 'Whether to mark the release as a prerelease'
        required: false
        default: true
        type: boolean
      openai_context:
        description: 'Additional context you want to provide to Azure OpenAI for release notes'
        required: false
        default: ''
        type: string
    secrets:
      STRATUS_AZURE_OPENAI_API_ENDPOINT:
        required: true
      STRATUS_AZURE_OPENAI_CLIENT_ID:
        required: true
      STRATUS_AZURE_OPENAI_TENANT_ID:
        required: true
      STRATUS_AZURE_OPENAI_SUBSCRIPTION_ID:
        required: true

permissions:
  contents: write
  id-token: write
  pull-requests: write

jobs:
  draft-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Generate Draft Release
        uses: HafslundEcoVannkraft/stratus-gh-actions/.github/actions/release@v1.0.0
        with:
          azure_openai_endpoint: ${{ secrets.STRATUS_AZURE_OPENAI_API_ENDPOINT }}
          azure_openai_deployment_name: gpt-4o
          azure_openai_api_version: 2024-10-21
          azure_client_id: ${{ secrets.STRATUS_AZURE_OPENAI_CLIENT_ID }}
          azure_tenant_id: ${{ secrets.STRATUS_AZURE_OPENAI_TENANT_ID }}
          azure_subscription_id: ${{ secrets.STRATUS_AZURE_OPENAI_SUBSCRIPTION_ID }}
          draft: ${{ inputs.draft }}
          prerelease: ${{ inputs.prerelease }}
          append_context: ${{ inputs.openai_context }}

      - name: Comment Release Notes on PR
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const releaseNotes = fs.readFileSync('release_notes.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## üìù Generated Release Notes Preview\n\n${releaseNotes}\n\nYou can review and edit these release notes in the draft release before merging.`
            })