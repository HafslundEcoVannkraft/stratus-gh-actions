name: Draft Release

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main ]

permissions:
  contents: write
  id-token: write
  pull-requests: write

jobs:
  draft-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - id: release_draft
        uses: HafslundEcoVannkraft/stratus-gh-actions/.github/actions/release@2d661b68a2c1277194d72299f95f64b80f01682c
        with:
          azure_openai_endpoint: ${{ secrets.STRATUS_AZURE_OPENAI_API_ENDPOINT }}
          azure_openai_deployment_name: gpt-4o
          azure_openai_api_version: 2024-10-21
          azure_client_id: ${{ secrets.STRATUS_AZURE_OPENAI_CLIENT_ID }}
          azure_tenant_id: ${{ secrets.STRATUS_AZURE_OPENAI_TENANT_ID }}
          azure_subscription_id: ${{ secrets.STRATUS_AZURE_OPENAI_SUBSCRIPTION_ID }}
          draft: true  # Creates a draft release
          prerelease: true  # Marks it as prerelease until merged
          append_context: "This repository is a monorepo containing multiple GitHub Actions composite actions, organized under the .github/actions folder, with each action in its own subfolder. If multiple actions are updated in the same release, the Release Notes should categorize updates, improvments and bug fixes per composite action."

      - name: Debug release outputs
        env:
          new_version: ${{ steps.release_draft.outputs.new_version }}
          previous_version: ${{ steps.release_draft.outputs.previous_version }}
          bump_level: ${{ steps.release_draft.outputs.bump_level }}
          release_notes_base64: ${{ steps.release_draft.outputs.release_notes_base64 }}
        run: |
          echo "Composite action outputs:"
          echo "version: $version"
          echo "previous_version: $previous_version"
          echo "bump_level: $bump_level"
          echo "release_notes_base64: $release_notes_base64"

      - name: Comment Release Notes on PR
        if: ${{ steps.release_draft.outputs.release_notes_base64 != '' }}
        uses: actions/github-script@v7
        with:
          script: |
            releaseBody=$(echo "${{ steps.release.outputs.release_notes_base64}} | base64 -d)         
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## üìù Generated Release Notes Preview\n\n${releaseBody}\n\nYou can review and edit these release notes in the draft release before merging.`
            })