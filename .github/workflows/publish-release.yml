# .github/workflows/publish-release.yml
name: Publish Release

on:
  pull_request:
    types: [closed]
    branches: [ main ]

permissions:
  contents: write
  id-token: write
  pull-requests: write

jobs:
  publish-release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Find the draft release created during PR
      - name: Get Draft Release
        id: get-draft
        uses: actions/github-script@v7
        with:
          script: |
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            
            const draftRelease = releases.data.find(release => 
              release.draft === true && 
              release.prerelease === true
            );
            
            if (!draftRelease) {
              core.setFailed('No draft release found');
              return;
            }
            
            console.log(`Found draft release: ${draftRelease.id}`);
            return draftRelease.id;
          result-encoding: string

      # Update the release to remove draft and prerelease status
      - name: Publish Release
        if: steps.get-draft.outputs.result != ''
        uses: actions/github-script@v7
        with:
          script: |
            const releaseId = ${{ steps.get-draft.outputs.result }};
            
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: releaseId,
              draft: false,
              prerelease: false
            });
            
            console.log('Release published successfully!');

      - name: Comment on PR
        if: steps.get-draft.outputs.result != ''
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš€ Release has been published successfully!'
            })